<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">


	<bean id="importJobLauncher" class="com.raritan.tdz.dctimport.job.ImportJobLauncherImpl"/>


<!-- <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
	<property name="jobRepository" ref="jobRepository"/>
	<property name="jobLauncher" ref="jobLauncher"/>
	<property name="jobRegistry" ref="jobRegistry"/>
</bean> -->




<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>


<bean id="importTransactionManager"
  class="org.springframework.batch.support.transaction.ResourcelessTransactionManager">
</bean>

<batch:job-repository id="jobRepository" data-source="springBatchDataSource" transaction-manager="importTransactionManager"
        isolation-level-for-create="SERIALIZABLE" table-prefix="BATCH_" max-varchar-length="6000" />

<bean id="jobLauncher"
	class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
	<property name="jobRepository" ref="jobRepository"/>	
	<property name="taskExecutor">
	    <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
	</property>
</bean>

<batch:job id="importJob">
	<batch:step id="importStepResolver">
		<batch:tasklet>
			<batch:chunk commit-interval="1">
				<batch:reader>
					<bean class="com.raritan.tdz.dctimport.job.StepResolverReader"/>
				</batch:reader>
				<batch:writer>
					<bean class="com.raritan.tdz.dctimport.job.StepResolverWriter"/>
				</batch:writer>
			</batch:chunk>
		</batch:tasklet>
		<batch:next on="import" to="import"/>
		<batch:next on="validate" to="validation"/>
		<batch:listeners>
			<batch:listener ref="importStepResolveListener"/>
		</batch:listeners>
	</batch:step>
	
	<batch:step id="validation">
		<batch:tasklet>
			<batch:chunk reader="dctImportReader" writer="dctImportValidationWriter" commit-interval="1"/>
		</batch:tasklet>
		<batch:listeners>
			<batch:listener>
				<bean class="com.raritan.tdz.dctimport.job.DCTImportFailureListner">
					<constructor-arg name="importErrorHandler" ref="importExceptionHandler"/>
				</bean>
			</batch:listener>
			<batch:listener ref="importValidationStepListener"/>
		</batch:listeners>
	</batch:step>
	
	<batch:step id="import">
		<batch:tasklet>
			<batch:chunk reader="dctImportReader" writer="dctImportProcessWriter" commit-interval="1"/>
		</batch:tasklet>
		<batch:listeners>
			<batch:listener>
				<bean class="com.raritan.tdz.dctimport.job.DCTImportFailureListner">
					<constructor-arg name="importErrorHandler" ref="importExceptionHandler"/>
				</bean>
			</batch:listener>
			<batch:listener ref="importImportStepListener"/>
		</batch:listeners>
	</batch:step>
	<batch:listeners>
		<batch:listener ref="importJobListener"/>
	</batch:listeners>
</batch:job>

<bean id="importJobListener" class="com.raritan.tdz.dctimport.job.ImportJobListener">
	<constructor-arg name="importErrorHandler" ref="importExceptionHandler"></constructor-arg>
</bean>

<bean id="importStepResolveListener" class="com.raritan.tdz.dctimport.job.ImportStepResolveListener"/>

<bean id="importValidationStepListener" class="com.raritan.tdz.dctimport.job.ImportStepListener">
	<constructor-arg name="importErrorHandler" ref="importExceptionHandler"/>
	<property name="cleanLogger" value="true"/>
</bean>

<bean id="importImportStepListener" class="com.raritan.tdz.dctimport.job.ImportStepListener">
	<constructor-arg name="importErrorHandler" ref="importExceptionHandler"/>
</bean>


<bean id="importLineMapper" class="com.raritan.tdz.dctimport.job.ImportLineMapper">
	<property name="tokenizers" ref="importTokenizers"/>
	<property name="fieldSetMappers" ref="importFieldSetMappers"/>
	<property name="importDTOs" ref="importDTOs"/>
	<property name="importErrorHandler" ref="importErrorHandlerGateway"/>
</bean>

<bean id="dctImportValidationWriter" class="com.raritan.tdz.dctimport.job.DCTImportWriter"/>
<bean id="dctImportProcessWriter" class="com.raritan.tdz.dctimport.job.DCTImportWriter">
	<property name="process" value="true"/>
</bean>

<bean id="importFileResource" class="org.springframework.core.io.FileSystemResource" scope="step">
	<constructor-arg name="path" value="#{jobParameters['import.file.name']}"/>
</bean>

<bean id="dctImportReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
	<property name="resource" ref="importFileResource"/>
	<property name="comments" value=""/>
	<property name="lineMapper" ref="importLineMapperGateway"/>
</bean>

<bean id="importLineNumber" class="java.util.concurrent.atomic.AtomicInteger"/>

<bean id="dctCSVImportLogger" class="com.raritan.tdz.dctimport.logger.ImportCSVLogger">
	<constructor-arg name="lineNumber" ref="importLineNumber"/>
</bean>

</beans>
